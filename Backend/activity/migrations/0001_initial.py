# Generated by Django 3.2.12 on 2022-11-20 10:44

import activity.models
from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('discussion', '0001_initial'),
        ('farm', '0007_farmgroups_image'),
    ]

    operations = [
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='New state', max_length=256)),
                ('notes', models.TextField(blank=True)),
                ('transition_date', models.DateTimeField(default=activity.models.return_date_time)),
                ('notifiers', models.ManyToManyField(blank=True, related_name='state_notifiers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('need_approval', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('discussionboard_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='discussion.discussionboard')),
                ('notes', models.TextField(blank=True)),
                ('completion_date', models.DateTimeField(blank=True, default=activity.models.return_date_time)),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('has_finished', models.BooleanField(default=False)),
                ('is_halted', models.BooleanField(default=False)),
            ],
            bases=('discussion.discussionboard',),
        ),
        migrations.CreateModel(
            name='Workflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='New workflow', max_length=256)),
                ('is_production', models.BooleanField(default=False)),
                ('archived', models.BooleanField(default=False)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.farm')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('startState', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_state', to='activity.state')),
            ],
        ),
        migrations.CreateModel(
            name='WorkGroups',
            fields=[
                ('farmgroups_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='farm.farmgroups')),
                ('associatedFlow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.workflow')),
            ],
            bases=('farm.farmgroups',),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.CreateModel(
            name='WorkDocuments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='New file', max_length=256)),
                ('file', models.FileField(upload_to='files')),
                ('associatedWork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.work')),
            ],
        ),
        migrations.AddField(
            model_name='work',
            name='assignee',
            field=models.ManyToManyField(blank=True, to='activity.WorkGroups'),
        ),
        migrations.AddField(
            model_name='work',
            name='associatedState',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.state'),
        ),
        migrations.AddField(
            model_name='work',
            name='notifiers',
            field=models.ManyToManyField(blank=True, related_name='work_notifiers', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='TransitionApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approval', models.BooleanField(default=False)),
                ('reject', models.BooleanField(default=False)),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('transitionToApprove', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.transition')),
            ],
        ),
        migrations.AddField(
            model_name='transition',
            name='associatedFlow',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.workflow'),
        ),
        migrations.AddField(
            model_name='transition',
            name='next',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='next_state', to='activity.state'),
        ),
        migrations.AddField(
            model_name='transition',
            name='previous',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='previous_state', to='activity.state'),
        ),
        migrations.CreateModel(
            name='JSONWorkflow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jsonFlow', models.JSONField()),
                ('archived', models.BooleanField(default=False)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='farm.farm')),
                ('workflow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.workflow')),
            ],
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('discussionboard_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='discussion.discussionboard')),
                ('startTime', models.DateTimeField(default=django.utils.timezone.now)),
                ('endTime', models.DateTimeField(blank=True, null=True)),
                ('has_finished', models.BooleanField(default=False)),
                ('associatedFlow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='activity.workflow')),
                ('currentStates', models.ManyToManyField(blank=True, to='activity.State')),
                ('initiater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            bases=('discussion.discussionboard',),
        ),
    ]
